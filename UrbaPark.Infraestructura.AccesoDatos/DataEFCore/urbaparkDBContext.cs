// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace UrbaPark.Infraestructura.AccesoDatos;

public partial class urbaparkDBContext : DbContext
{
    public urbaparkDBContext()
    {
    }

    public urbaparkDBContext(DbContextOptions<urbaparkDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<cronogramas_soporte> cronogramas_soporte { get; set; }

    public virtual DbSet<incidencias_software> incidencias_software { get; set; }

    public virtual DbSet<informes_software> informes_software { get; set; }

    public virtual DbSet<parqueaderos> parqueaderos { get; set; }

    public virtual DbSet<rel_cronogramas_tecnicos> rel_cronogramas_tecnicos { get; set; }

    public virtual DbSet<roles> roles { get; set; }

    public virtual DbSet<software_parqueaderos> software_parqueaderos { get; set; }

    public virtual DbSet<soluciones_aplicadas> soluciones_aplicadas { get; set; }

    public virtual DbSet<tecnicos_software> tecnicos_software { get; set; }

    public virtual DbSet<usuarios> usuarios { get; set; }

    /*

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-P9QMUGG;Initial Catalog=urbapark;Integrated Security=True; TrustServerCertificate=True;");
    */

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<cronogramas_soporte>(entity =>
        {
            entity.HasKey(e => e.id_cronograma).HasName("PK__cronogra__9C4E436C2852F8EB");

            entity.Property(e => e.frecuencia)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.observaciones).HasColumnType("text");
            entity.Property(e => e.tipo)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.id_parqueaderoNavigation).WithMany(p => p.cronogramas_soporte)
                .HasForeignKey(d => d.id_parqueadero)
                .HasConstraintName("FK__cronogram__id_pa__46E78A0C");
        });

        modelBuilder.Entity<incidencias_software>(entity =>
        {
            entity.HasKey(e => e.id_incidencia).HasName("PK__incidenc__D7757E7661B5674D");

            entity.Property(e => e.codigo)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.descripcion)
                .IsRequired()
                .HasColumnType("text");
            entity.Property(e => e.severidad)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);

            entity.HasOne(d => d.id_informeNavigation).WithMany(p => p.incidencias_software)
                .HasForeignKey(d => d.id_informe)
                .HasConstraintName("FK__incidenci__id_in__3F466844");
        });

        modelBuilder.Entity<informes_software>(entity =>
        {
            entity.HasKey(e => e.id_informe).HasName("PK__informes__ECCCE10FE618BCCC");

            entity.Property(e => e.descripcion).HasColumnType("text");
            entity.Property(e => e.modulo_afectado)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.tipo)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.id_softwareNavigation).WithMany(p => p.informes_software)
                .HasForeignKey(d => d.id_software)
                .HasConstraintName("FK__informes___id_so__3A81B327");

            entity.HasOne(d => d.id_tecnicoNavigation).WithMany(p => p.informes_software)
                .HasForeignKey(d => d.id_tecnico)
                .HasConstraintName("FK__informes___id_te__3B75D760");
        });

        modelBuilder.Entity<parqueaderos>(entity =>
        {
            entity.HasKey(e => e.id_parqueadero).HasName("PK__parquead__0A2A3B21A8A00EF1");

            entity.Property(e => e.direccion)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.estado)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasDefaultValue("operativo");
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<rel_cronogramas_tecnicos>(entity =>
        {
            entity.HasKey(e => new { e.id_cronograma, e.id_tecnico }).HasName("PK__rel_cron__F11B4A1FB1390359");

            entity.Property(e => e.asignado).HasDefaultValue(false);
            entity.Property(e => e.confirmado).HasDefaultValue(false);

            entity.HasOne(d => d.id_cronogramaNavigation).WithMany(p => p.rel_cronogramas_tecnicos)
                .HasForeignKey(d => d.id_cronograma)
                .HasConstraintName("FK__rel_crono__id_cr__4BAC3F29");

            entity.HasOne(d => d.id_tecnicoNavigation).WithMany(p => p.rel_cronogramas_tecnicos)
                .HasForeignKey(d => d.id_tecnico)
                .HasConstraintName("FK__rel_crono__id_te__4CA06362");
        });

        modelBuilder.Entity<roles>(entity =>
        {
            entity.HasKey(e => e.id_rol).HasName("PK__roles__6ABCB5E0F8116C94");

            entity.HasIndex(e => e.nombre, "UQ__roles__72AFBCC6A78EC1EB").IsUnique();

            entity.Property(e => e.descripcion).HasColumnType("text");
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<software_parqueaderos>(entity =>
        {
            entity.HasKey(e => e.id_software).HasName("PK__software__62C8028EF889797D");

            entity.Property(e => e.descripcion).HasColumnType("text");
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.version)
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.id_parqueaderoNavigation).WithMany(p => p.software_parqueaderos)
                .HasForeignKey(d => d.id_parqueadero)
                .HasConstraintName("FK__software___id_pa__32E0915F");
        });

        modelBuilder.Entity<soluciones_aplicadas>(entity =>
        {
            entity.HasKey(e => e.id_solucion).HasName("PK__solucion__47FA045383F09EC6");

            entity.Property(e => e.descripcion)
                .IsRequired()
                .HasColumnType("text");
            entity.Property(e => e.resultado).HasColumnType("text");

            entity.HasOne(d => d.id_incidenciaNavigation).WithMany(p => p.soluciones_aplicadas)
                .HasForeignKey(d => d.id_incidencia)
                .HasConstraintName("FK__solucione__id_in__4222D4EF");
        });

        modelBuilder.Entity<tecnicos_software>(entity =>
        {
            entity.HasKey(e => e.id_tecnico).HasName("PK__tecnicos__D55097373D57E1B2");

            entity.HasIndex(e => e.id_usuario, "UQ__tecnicos__4E3E04AC74715B3D").IsUnique();

            entity.Property(e => e.correo_electronico)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.especialidad)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.telefono)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.id_usuarioNavigation).WithOne(p => p.tecnicos_software)
                .HasForeignKey<tecnicos_software>(d => d.id_usuario)
                .OnDelete(DeleteBehavior.SetNull)
                .HasConstraintName("FK__tecnicos___id_us__36B12243");
        });

        modelBuilder.Entity<usuarios>(entity =>
        {
            entity.HasKey(e => e.id_usuario).HasName("PK__usuarios__4E3E04AD51AA643E");

            entity.HasIndex(e => e.usuario, "UQ__usuarios__9AFF8FC6DE3AA1BF").IsUnique();

            entity.Property(e => e.contrasena)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.correo_electronico)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.estado)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasDefaultValue("activo");
            entity.Property(e => e.nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.usuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasMany(d => d.id_rol).WithMany(p => p.id_usuario)
                .UsingEntity<Dictionary<string, object>>(
                    "usuarios_roles",
                    r => r.HasOne<roles>().WithMany()
                        .HasForeignKey("id_rol")
                        .HasConstraintName("FK__usuarios___id_ro__2C3393D0"),
                    l => l.HasOne<usuarios>().WithMany()
                        .HasForeignKey("id_usuario")
                        .HasConstraintName("FK__usuarios___id_us__2B3F6F97"),
                    j =>
                    {
                        j.HasKey("id_usuario", "id_rol").HasName("PK__usuarios__5895CFF387980E4F");
                    });
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}